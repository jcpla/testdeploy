version: '2.1'
services:
  db:
    hostname: theking.mysql
    image: 'mariadb:10.4'
    environment:
      - MYSQL_ROOT_PASSWORD="${MYSQL_ROOT_PASSWORD}"
      - MYSQL_DATABASE="${MYSQL_DATABASE}"
      - MYSQL_USER="${MYSQL_USER}"
      - MYSQL_PASSWORD="${MYSQL_PASSWORD}"
    ports:
      - '3306'
    volumes:
      - 'theking-magento-sync:/app:delegated'
      - 'theking-mysql-db:/var/lib/mysql'
    healthcheck:
      test: 'mysqladmin ping -h localhost'
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      magento:
        aliases:
          - theking.mysql

  redis:
    hostname: theking.redis
    image: 'redis:6.0'
    volumes:
      - 'theking-magento-sync:/app:delegated'
      - 'theking-redis-db:/data'
    ports:
      - 6379
    restart: always
    healthcheck:
      test: 'redis-cli ping || exit 1'
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      magento:
        aliases:
          - theking.redis
  elasticsearch:
    hostname: theking.elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    environment:
      ES_JAVA_OPTS: '${ES_JAVA_OPTS:--Xms512m -Xmx512m}'
      discovery.type: single-node
    volumes:
      - theking-elasticsearch-db:/var/lib/elasticsearch
    networks:
      magento:
        aliases:
          - theking.elasticsearch
    ports:
        - "9200:9200"
        - "9300:9300"
    healthcheck:
      test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  fpm:
    hostname: theking.fpm
    image: 'magento/magento-cloud-docker-php:7.4-fpm-1.2.2'
    extends: generic
    volumes:
      - 'theking-magento-sync:/app:delegated'
    networks:
      magento:
        aliases:
          - theking.fpm
    depends_on:
      db:
        condition: service_healthy

  web:
    hostname: theking.web
    image: 'magento/magento-cloud-docker-nginx:1.19-1.2.2'
    extends: generic
    ports:
      - '80:80'
    volumes:
      - 'theking-magento-sync:/app:delegated'
    environment:
      - VIRTUAL_HOST=theking.varnish
      - VIRTUAL_PORT=80
      - HTTPS_METHOD=noredirect
    networks:
      magento:
        aliases:
          - theking.web
    depends_on:
      fpm:
        condition: service_started

  varnish:
    hostname: theking.varnish
    image: 'magento/magento-cloud-docker-varnish:6.2-1.2.2'
    networks:
      magento:
        aliases:
          - theking.varnish
    depends_on:
      web:
        condition: service_started

  tls:
    hostname: theking.tls
    image: 'magento/magento-cloud-docker-tls:latest-1.2'
    ports:
      - '443:443'
    environment:
      HTTPS_UPSTREAM_SERVER_ADDRESS: varnish
    networks:
      magento:
        aliases:
          - magento.tls
    depends_on:
      varnish:
        condition: service_started

  generic:
    hostname: theking.generic
    image: 'magento/magento-cloud-docker-php:7.4-cli-1.2.2'
    env_file: ./.docker/config.env
    environment:
      - MAGENTO_RUN_MODE=developer
      - 'PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip sodium redis xsl blackfire'
  build:
    hostname: theking.build
    image: 'magento/magento-cloud-docker-php:7.4-cli-1.2.2'
    extends: generic
    volumes:
      - 'theking-magento-sync:/app:delegated'
    networks:
      magento-build:
        aliases:
          - theking.build
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  deploy:
    hostname: theking.deploy
    image: 'magento/magento-cloud-docker-php:7.4-cli-1.2.2'
    extends: generic
    volumes:
      - 'theking-magento-sync:/app:delegated'
    networks:
      magento:
        aliases:
          - deploy.magento2.docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy  

  mailhog:
    hostname: theking.mailhog
    image: 'mailhog/mailhog:latest'
    restart: always
    ports:
      - '1025:1025'
      - '8025:8025'
    networks:
      magento:
        aliases:
          - theking.mailhog
volumes:
  theking-magento-sync:
    driver_opts:
      type: none
      device: '${PWD}/theking-magento-sync'
      o: bind
  theking-mysql-db: {  }
  theking-redis-db: {  }
  theking-elasticsearch-db: {  }
networks:
  magento:
    driver: bridge
  magento-build:
    driver: bridge
